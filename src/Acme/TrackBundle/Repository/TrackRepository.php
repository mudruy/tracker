<?php

namespace Acme\TrackBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Acme\TrackBundle\Entity\Track;

/**
 * TrackRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TrackRepository extends EntityRepository
{
    
    /**
     * get stat record
     * @param string $domain
     * @return Track
     */
    public function getCurrentTrack($domain) {
        $date = new \DateTime("now");
        $track = $this->findOneBy(array('domain' => $domain, 'date' => $date));
        if(empty($track)){
            $track = new Track();
            $track->setDomain($domain);
            $track->setDate($date);
            $track->setRaw(0);
            $track->setUniq(0);
            $this->getEntityManager()->persist($track);
            $this->getEntityManager()->flush();
            try {
                //$this->getEntityManager()->persist($track);
            } catch (Exception $exc) {
                $track = $this->findOneBy(array('domain' => $domain, 'date' => $date));
            }
        } 
        return $track;
    }
    
    /**
     * 
     * @param Track $track
     */
    public function upRaw($track){
        $q = $this->getEntityManager()->createQuery('update Acme\TrackBundle\Entity\Track e set e.raw = e.raw + 1 where e.id =?1')
                ->setParameter(1, $track->getId());
        $numUpdated = $q->execute();
    }
    
    /**
     * 
     * @param Track $track
     */
    public function upUniq($track){
        $q = $this->getEntityManager()->createQuery('update Acme\TrackBundle\Entity\Track e set e.uniq = e.uniq + 1 where e.id =?1')
                ->setParameter(1, $track->getId());
        $numUpdated = $q->execute();
    }
    
    /**
     * 
     * @return Query
     */
    public function getStat(){
        return $this->createQueryBuilder('t')
        ->orderBy('t.date', 'DESC')
        ->getQuery();
    }
}
